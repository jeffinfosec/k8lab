#Clone a sample application source from GitHub
#Create a container image from the sample application source
#Test the multi-container application in a local Docker environment

git clone https://github.com/Azure-Samples/azure-voting-app-redis.git
cd azure-voting-app-redis
docker-compose up -d
$ docker images
docker ps   
docker-compose down

#delete all docker images
docker system prune -a --volumes
Remove-Item 'azure-voting-app-redis' -Recurse

#Create an Azure Container Registry (ACR) instance
#Tag a container image for ACR
#Upload the image to ACR
#View images in your registry

#Create Azure Resource Group
az group create --name myResourceGroup --location eastus
az acr create --resource-group myResourceGroup --name jeffliacr --sku Basic
az acr login --name jeffliacr 
$ docker images

az acr list --resource-group myResourceGroup --query "[].{acrLoginServer:loginServer}" --output table

#jeffliacr.azurecr.io

# tag your local azure-vote-front image with the acrLoginServer address of the container registry. To indicate the image version, add :v1 to the end of the image name:

docker tag mcr.microsoft.com/azuredocs/azure-vote-front:v1 jeffliacr.azurecr.io/azure-vote-front:v1

$ docker images
docker push jeffliacr.azurecr.io/azure-vote-front:v1

# list images
az acr repository list --name jeffliacr --output table

#Deploy a Kubernetes AKS cluster that can authenticate to an Azure container registry
#Install the Kubernetes CLI (kubectl)
#Configure kubectl to connect to your AKS cluster

# CREATE AKS CLUSTER
az aks create --resource-group myResourceGroup --name myAKSCluster --node-count 2 --generate-ssh-keys --attach-acr jeffliacr 

#az aks install-cli
az aks get-credentials --resource-group myResourceGroup --name myAKSCluster

az acr list --resource-group myResourceGroup --query "[].{acrLoginServer:loginServer}" --output table

#Run applications in Azure Kubernetes Service (AKS)
#Update a Kubernetes manifest files
#Run an application in Kubernetes
#Test the application

az acr list --resource-group myResourceGroup --query "[].{acrLoginServer:loginServer}" --output table
notepad azure-vote-all-in-one-redis.yaml

##
containers:
- name: azure-vote-front
  image: jeffliacr.azurecr.io/azure-vote-front:v1
##

kubectl apply -f azure-vote-all-in-one-redis.yaml

#
$ kubectl apply -f azure-vote-all-in-one-redis.yaml
deployment "azure-vote-back" created
service "azure-vote-back" created
deployment "azure-vote-front" created
service "azure-vote-front" created
#

kubectl get service azure-vote-front --watch
#azure-vote-front   LoadBalancer   10.0.34.242   52.179.23.131   80:30676/TCP   67s

